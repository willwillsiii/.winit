" Important settings
set nocompatible
filetype indent plugin on
" Setting syntax might cause vim to overwrite settings.
" See below:
" https://stackoverflow.com/questions/33380451/is-there-a-difference-between-syntax-on-and-syntax-enable-in-vimscript
if !exists(g:syntax_on)
    syntax enable
endif
" Modeline is disabled for security reasons.
" See below:
" https://security.stackexchange.com/questions/36001/vim-modeline-vulnerabilities
set nomodeline

" vim-airline settings
let g:airline_powerline_fonts = 1
let g:airline_theme = 'ayu_dark'

" Command-T
let g:CommandTPreferredImplementation = 'ruby'

" Mini Buffer Explorer
let g:miniBufExplAutoStart = 1
let g:miniBufExplBuffersNeeded = 2

" Nerdtree
nnoremap <Leader>f :NERDTreeToggle<CR>

" Undotree
nnoremap <Leader>u :UndotreeToggle<CR>

" TaskList
nmap <Leader>d <Plug>TaskList

" SuperTab
let g:SuperTabDefaultCompletionType = 'context'
let g:SuperTabContextDefaultCompletionType = '<C-X><C-O>'

" EasyEscape
let g:easyescape_chars = { ';': 1, 'l': 1 }
let g:easyescape_timeout = 100
cnoremap ;l <ESC>
cnoremap l; <ESC>

" Jedi
let g:jedi#popup_on_dot = 0

" Pytest
let g:pytest_executable = "/home/will/.pyenv/shims/pytest"

" Python settings for *.py files
" Some are redundant to allow changes to the general settings to not affect
" python settings. 
let g:python_recommended_style = 0
au FileType python setl
    \ tabstop=8
    \ softtabstop=4
    \ shiftwidth=4
    \ textwidth=79
    \ colorcolumn=72,+1
    \ expandtab
    \ autoindent
    \ number
    \ fileformat=unix
au FileType python nmap <buffer> <Leader>q :call flake8#Flake8()<CR>
au BufWritePost *.py call flake8#Flake8()

" TeX settings
let g:tex_flavor = 'latex'
au FileType tex setl indentexpr=

" General settings
set encoding=utf-8
set hidden
set wildmenu
set showcmd
set ignorecase
set smartcase
set backspace=indent,eol,start
set autoindent
set nostartofline
set ruler
"set confirm
"set visualbell
"set t_vb=
"set mouse=a
"set cmdheight=2
set number
set notimeout ttimeout ttimeoutlen=200
set pastetoggle=<C-P>
set tabstop=8
set shiftwidth=4
set softtabstop=4
set expandtab
set foldlevel=99
set wrap
set linebreak
set wildmenu
set splitbelow
set splitright

" General bindings
map Y y$
nnoremap <C-J> <C-W>j
nnoremap <C-K> <C-W>k
nnoremap <C-H> <C-W>h
nnoremap <C-L> <C-W>l
nnoremap <Space> za

" Colors
set t_Co=256
set background=dark
let g:solarized_termcolors = 256
let g:ayucolor = 'dark'
"let ayucolor="mirage"
"let ayucolor="light"
" Inspect $TERM instad of t_Co as it works in neovim as well
if &term =~ '256color'
    " Enable true (24-bit) colors instead of (8-bit) 256 colors.
    " :h true-color
    if has('termguicolors')
        " The next lines fix color problems when using tmux.
        " See https://stackoverflow.com/questions/62071974/vim-termguicolors-with-xterm-true-color-still-causing-problems
        let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
        let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
        " The next line is required for most colorschemes to look nice,
        " but messes up the solarized colorscheme.
        set termguicolors
    endif
    colorscheme ayu
    "colorscheme jellybeans
    "colorscheme gruvbox
    "colorscheme badwolf
    "colorscheme apprentice
else
    " Fallback to solarized if termguicolors can't be set.
    colorscheme solarized
endif

